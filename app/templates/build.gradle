buildscript {
    ext {
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:<%= bootVersion %>')
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
<% if (useSpock) { %>
    apply plugin: 'groovy'
<%} else {%>
    apply plugin: 'java'
<%} %>

jar {
    applicationName = '<%= applicationName %>'
    version = '0.1.0-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    // Google guava
    compile('com.google.guava:guava')

    // Spring Core
    <%if (security){%>
    compile('org.springframework.boot:spring-boot-starter-security') <%}%>
     <%if (aop){%>
    compile('org.springframework.boot:spring-boot-starter-aop') <%}%>
    <%if (atomikos){%>
    compile('org.springframework.boot:spring-boot-starter-jta-atomikos') <%}%>
    <%if (bitronix){%>
    compile('org.springframework.boot:spring-boot-starter-jta-bitronix') <%}%>

    // Spring Web
    <%if (web){%>
    compile("org.springframework.boot:spring-boot-starter-web") <%}%>
    <%if (websocket){%>
    compile("org.springframework.boot:spring-boot-starter-websocket") <%}%>
    <%if (ws){%>
    compile("org.springframework.boot:spring-boot-starter-ws") <%}%>
    <%if (jersey){%>
    compile("org.springframework.boot:spring-boot-starter-jersey") <%}%>
    <%if (vaadin){%>
    compile("com.vaadin:vaadin-spring-boot-starter:1.0.0.beta3") <%}%>
    <%if (rest){%>
    compile("org.springframework.boot:spring-boot-starter-data-rest") <%}%>
    <%if (hateoas){%>
    compile("org.springframework.boot:spring-boot-starter-hateoas") <%}%>
    <%if (mobile){%>
    compile("org.springframework.boot:spring-boot-starter-mobile") <%}%>

    // Data
    <%if (jdbc){%>
    compile("org.springframework.boot:spring-boot-starter-jdbc") <%}%>
    <%if (jpa){%>
    compile("org.springframework.boot:spring-boot-starter-data-jpa") <%}%>
    <%if (mongodb){%>
    compile("org.springframework.boot:spring-boot-starter-data-mongodb") <%}%>
    <%if (redis){%>
    compile("org.springframework.boot:spring-boot-starter-redis") <%}%>
    <%if (gemfire){%>
    compile("org.springframework.boot:spring-boot-starter-data-gemfire") <%}%>
    <%if (solr){%>
    compile("org.springframework.boot:spring-boot-starter-data-solr") <%}%>
    <%if (elasticsearch){%>
    compile("org.springframework.boot:spring-boot-starter-data-elasticsearch") <%}%>

    <% if (useSpock) {%>
        testCompile('org.codehaus.groovy:groovy-all')
        testCompile('org.spockframework:spock-core') <% } %>
}

dependencyManagement {
 imports {
  mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:1.0.1.RELEASE'
 }
}

<% if (useWrapper) {%>
task(type: Wrapper) {
  gradleVersion = '2.3'
} <%} %>
